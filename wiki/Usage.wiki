#summary Usage of SliderBars

== Usage of !SliderBars ==

Then !SliderBar is created it is time to start use it.

Minimal set of steps for create abd usage !SliderBar:

  * Create Your implementation of !SliderBar ( not absolutly necessary - You can use earlier predefined !SliderBar from some kind of SliderBar library )

  * Create !SliderBar instance

  * Set width of !SliderBar for !SliderBarHorizontal or height for !SliderBarVertical

  * Set integer value, which corresponds to rightmost position of Drag wiidget (knob) for horizontal !SliderBar or for bottommost position of Drag widget  for vertical !SliderBar

  * Add event listener fo react to change position of Drag widget (knob) 

  * Place !SliderBar to screen

*_Code samples for illlustrate this steps_*

_Creating implementation of !SliderBar_

{{{
public class SliderBarSimpleVertical extends SliderBarVertical {
	
	ImagesSliderBarSimpleVertical images = GWT.create(ImagesSliderBarSimpleVertical.class);

	public SliderBarSimpleVertical(int maxValue, String height, boolean showRows) {		
		if (showRows){
			setLessWidget(new Image(images.less()) );
			setScaleWidget(new Image(images.scalev().getUrl()), 10);
			setMoreWidget(new Image(images.more()));
		} else {
		    setScaleWidget(new Image(images.scalev().getUrl()), 10);
		}
		setDragWidget(new Image(images.drag()));
		this.setHeight(height);
		this.setMaxValue(maxValue);		
	}

	interface ImagesSliderBarSimpleVertical extends ClientBundle{
		
		@Source("dragvthin.png")
		ImageResource drag();

		@Source("minus.png")
		ImageResource less();

		@Source("plus.png")
		ImageResource more();

		@Source("scalevthinblack.png")
		DataResource scalev();				
	}
	
}
}}}  

_Creating instance of !SliderBar and seting height and max integer value, which corresponds to bottommost drag position_
{{{
...
SliderBarSimpleVertical sliderBarSimpleVertical = 
			new SliderBarSimpleVertical(maxValue, width,  true);
...
}}}

_Adding event listener_
{{{
...
		sliderBarSimpleVertical
		.addBarValueChangedHandler(new BarValueChangedHandler() {
			public void onBarValueChanged(BarValueChangedEvent event) {
				valueBox.setValue("" + event.getValue());
			}
		});		
...
}}}
[CommonInformation Common information about SliderBars]